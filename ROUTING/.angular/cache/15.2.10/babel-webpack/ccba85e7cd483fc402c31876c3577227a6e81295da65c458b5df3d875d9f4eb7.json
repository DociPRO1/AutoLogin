{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConnectionService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.URL_SERVICE = 'https://randomuser.me/api/?results=';\n    this.URL_SERVICE_ZIPS = 'http://localhost:8888/';\n  }\n  sendGetRequest(endPoint) {\n    console.log(this.URL_SERVICE + endPoint);\n    return this.httpClient.get(this.URL_SERVICE + endPoint);\n  }\n  sendGetRequestZips(endPoint) {\n    console.log(this.URL_SERVICE_ZIPS + endPoint);\n    return this.httpClient.get(this.URL_SERVICE_ZIPS + endPoint);\n  }\n  sendPostRequestZips(endPoint, par) {\n    let options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\n    };\n    return this.httpClient.post(this.URL_SERVICE_ZIPS + endPoint, par, options);\n  }\n  getCars(endPoint) {\n    console.log(this.URL_SERVICE_ZIPS + endPoint);\n    return this.httpClient.get(this.URL_SERVICE_ZIPS + endPoint);\n  }\n  sendVerifyLogin(endPoint, par) {\n    let options = {\n      headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\n    };\n    return this.httpClient.post(this.URL_SERVICE_ZIPS + endPoint, par, options);\n  }\n  static #_ = this.ɵfac = function ConnectionService_Factory(t) {\n    return new (t || ConnectionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnectionService,\n    factory: ConnectionService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAK5D,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAGtB,gBAAW,GAAG,qCAAqC;IACnD,qBAAgB,GAAG,wBAAwB;EAHnD;EAKOC,cAAc,CAACC,QAAgB;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,WAAW,GAAGH,QAAQ,CAAC;IACxC,OAAO,IAAI,CAACF,UAAU,CAACM,GAAG,CAAC,IAAI,CAACD,WAAW,GAAGH,QAAQ,CAAC;EACzD;EAEOK,kBAAkB,CAACL,QAAgB;IACxCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,gBAAgB,GAAGN,QAAQ,CAAC;IAC7C,OAAO,IAAI,CAACF,UAAU,CAACM,GAAG,CAAC,IAAI,CAACE,gBAAgB,GAAGN,QAAQ,CAAC;EAC9D;EAEOO,mBAAmB,CAACP,QAAgB,EAAEQ,GAAQ;IACvD,IAAIC,OAAO,GAAG;MAACC,OAAO,EAAE,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,mCAAmC;IAAC,CAAC;IACnG,OAAO,IAAI,CAACb,UAAU,CAACc,IAAI,CAAC,IAAI,CAACN,gBAAgB,GAAGN,QAAQ,EAAEQ,GAAG,EAAEC,OAAO,CAAC;EACzE;EAEOI,OAAO,CAACb,QAAgB;IAC7BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,gBAAgB,GAAGN,QAAQ,CAAC;IAC7C,OAAO,IAAI,CAACF,UAAU,CAACM,GAAG,CAAC,IAAI,CAACE,gBAAgB,GAAGN,QAAQ,CAAC;EAC9D;EAEOc,eAAe,CAACd,QAAgB,EAAEQ,GAAQ;IAC/C,IAAIC,OAAO,GAAG;MAACC,OAAO,EAAE,IAAIf,WAAW,EAAE,CAACgB,GAAG,CAAC,cAAc,EAAE,mCAAmC;IAAC,CAAC;IACnG,OAAO,IAAI,CAACb,UAAU,CAACc,IAAI,CAAC,IAAI,CAACN,gBAAgB,GAAGN,QAAQ,EAAEQ,GAAG,EAAEC,OAAO,CAAC;EAAE;EAAC;qBA9BrEb,iBAAiB;EAAA;EAAA;WAAjBA,iBAAiB;IAAAmB,SAAjBnB,iBAAiB;IAAAoB,YAFhB;EAAM","names":["HttpHeaders","ConnectionService","constructor","httpClient","sendGetRequest","endPoint","console","log","URL_SERVICE","get","sendGetRequestZips","URL_SERVICE_ZIPS","sendPostRequestZips","par","options","headers","set","post","getCars","sendVerifyLogin","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Leke\\OneDrive\\Desktop\\ANGULAR\\ROUTING\\src\\app\\service\\connection.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  private URL_SERVICE = 'https://randomuser.me/api/?results=';\n  private URL_SERVICE_ZIPS = 'http://localhost:8888/';\n\n  public sendGetRequest(endPoint: number) {\n    console.log(this.URL_SERVICE + endPoint);\n    return this.httpClient.get(this.URL_SERVICE + endPoint);\n  }\n\n  public sendGetRequestZips(endPoint: string) {\n    console.log(this.URL_SERVICE_ZIPS + endPoint);\n    return this.httpClient.get(this.URL_SERVICE_ZIPS + endPoint);\n  }\n\n  public sendPostRequestZips(endPoint: string, par: any) {\nlet options = {headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')};\nreturn this.httpClient.post(this.URL_SERVICE_ZIPS + endPoint, par, options);\n  }\n\n  public getCars(endPoint: string) {\n    console.log(this.URL_SERVICE_ZIPS + endPoint);\n    return this.httpClient.get(this.URL_SERVICE_ZIPS + endPoint);\n  }\n\n  public sendVerifyLogin(endPoint: string, par: any) {\n    let options = {headers: new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')};\n    return this.httpClient.post(this.URL_SERVICE_ZIPS + endPoint, par, options)  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}