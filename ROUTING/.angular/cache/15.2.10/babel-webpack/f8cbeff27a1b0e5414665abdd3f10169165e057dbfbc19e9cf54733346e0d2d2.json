{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Leke/OneDrive/Desktop/ANGULAR/AutoLogin/ROUTING/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AutoComponent = class AutoComponent {\n  constructor(webserviceService, formBuilder) {\n    this.webserviceService = webserviceService;\n    this.formBuilder = formBuilder;\n    this.filter = '';\n    this.carForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      nome: ['', Validators.required],\n      codMarca: ['', Validators.required],\n      nPorte: ['', Validators.required],\n      cilindrata: ['', Validators.required],\n      colore: ['', Validators.required],\n      anno: ['', Validators.required],\n      prezzo: ['', Validators.required],\n      targa: ['', Validators.required],\n      km: ['', Validators.required]\n    });\n    this.url = 'http://localhost:8888/';\n    this.auto = [];\n    this.credentials = [];\n    this.marche = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.webserviceService.getCarsSql('getCars');\n      console.log(_this.webserviceService.myCars);\n      _this.auto = _this.webserviceService.myCars;\n      _this.credentials = _this.webserviceService.loginData;\n      _this.marche = Array.from(new Set(_this.auto.map(car => car.marca)));\n    })();\n  }\n  onSubmit() {\n    if (this.carForm.valid) {\n      console.log('Form Submitted!', this.carForm.value);\n      this.webserviceService.addCar('addCar', this.carForm.value);\n    }\n  }\n  buyCar(car) {\n    this.webserviceService.vendiAuto('sellCar', {\n      id: car.id,\n      cid: this.credentials.id,\n      prezzo: car.prezzo,\n      data: new Date().toISOString().slice(0, 19).replace('T', ' ')\n    });\n  }\n};\nAutoComponent = __decorate([Component({\n  selector: 'auto',\n  templateUrl: './auto.component.html',\n  styleUrls: ['./auto.component.css']\n})], AutoComponent);\nexport { AutoComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAuBxBC,YAAmBC,iBAAoC,EAAUC,WAAwB;IAAtE,sBAAiB,GAAjBD,iBAAiB;IAA6B,gBAAW,GAAXC,WAAW;IAtB5E,WAAM,GAAW,EAAE;IAEnB,YAAO,GAAc,IAAI,CAACA,WAAW,CAACC,KAAK,CAAC;MAC1CC,EAAE,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MAC/BE,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MACnCG,MAAM,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACO,QAAQ,CAAC;MACjCI,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACO,QAAQ,CAAC;MACrCK,MAAM,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACO,QAAQ,CAAC;MACjCM,IAAI,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACO,QAAQ,CAAC;MAC/BO,MAAM,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACO,QAAQ,CAAC;MACjCQ,KAAK,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACO,QAAQ,CAAC;MAChCS,EAAE,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACO,QAAQ;KAC7B,CAAC;IAEM,QAAG,GAAW,wBAAwB;IAC9C,SAAI,GAAU,EAAE;IAChB,gBAAW,GAAQ,EAAE;IACrB,WAAM,GAAa,EAAE;EAKrB;EAEMU,QAAQ;IAAA;IAAA;MACZ,MAAM,KAAI,CAACd,iBAAiB,CAACe,UAAU,CAAC,SAAS,CAAC;MAClDC,OAAO,CAACC,GAAG,CAAC,KAAI,CAACjB,iBAAiB,CAACkB,MAAM,CAAC;MAC1C,KAAI,CAACC,IAAI,GAAG,KAAI,CAACnB,iBAAiB,CAACkB,MAAM;MACzC,KAAI,CAACE,WAAW,GAAG,KAAI,CAACpB,iBAAiB,CAACqB,SAAS;MAEnD,KAAI,CAACC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC,KAAI,CAACN,IAAI,CAACO,GAAG,CAAEC,GAAQ,IAAKA,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC;IAAC;EAC5E;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACC,OAAO,CAACC,KAAK,EAAE;MACpBf,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACa,OAAO,CAACE,KAAK,CAAC;MAClD,IAAI,CAAChC,iBAAiB,CAACiC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACH,OAAO,CAACE,KAAK,CAAC;;EAEjE;EAEAE,MAAM,CAACP,GAAQ;IACb,IAAI,CAAC3B,iBAAiB,CAACmC,SAAS,CAAC,SAAS,EAAE;MAAEhC,EAAE,EAAEwB,GAAG,CAACxB,EAAE;MAAEiC,GAAG,EAAE,IAAI,CAAChB,WAAW,CAACjB,EAAE;MAAEQ,MAAM,EAAEgB,GAAG,CAAChB,MAAM;MAAE0B,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG;IAAC,CAAE,CAAC;EAC1K;CACD;AA7CY3C,aAAa,eALzBF,SAAS,CAAC;EACT8C,QAAQ,EAAE,MAAM;EAChBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACW9C,aAAa,CA6CzB;SA7CYA,aAAa","names":["Component","Validators","AutoComponent","constructor","webserviceService","formBuilder","group","id","required","nome","codMarca","nPorte","cilindrata","colore","anno","prezzo","targa","km","ngOnInit","getCarsSql","console","log","myCars","auto","credentials","loginData","marche","Array","from","Set","map","car","marca","onSubmit","carForm","valid","value","addCar","buyCar","vendiAuto","cid","data","Date","toISOString","slice","replace","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Leke\\OneDrive\\Desktop\\ANGULAR\\AutoLogin\\ROUTING\\src\\app\\auto\\auto.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { WebserviceService } from '../service/webservice.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'auto',\r\n  templateUrl: './auto.component.html',\r\n  styleUrls: ['./auto.component.css']\r\n})\r\nexport class AutoComponent implements OnInit {\r\n  filter: string = '';\r\n\r\n  carForm: FormGroup = this.formBuilder.group({\r\n    id: ['', Validators.required],\r\n    nome: ['', Validators.required],\r\n    codMarca: ['', Validators.required],\r\n    nPorte: ['', Validators.required],\r\n    cilindrata: ['', Validators.required],\r\n    colore: ['', Validators.required],\r\n    anno: ['', Validators.required],\r\n    prezzo: ['', Validators.required],\r\n    targa: ['', Validators.required],\r\n    km: ['', Validators.required]\r\n  });\r\n\r\n  private url: string = 'http://localhost:8888/';\r\n  auto: any[] = [];\r\n  credentials: any = [];\r\n  marche: string[] = [];\r\n\r\n  data: any;\r\n\r\n  constructor(public webserviceService: WebserviceService, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    await this.webserviceService.getCarsSql('getCars');\r\n    console.log(this.webserviceService.myCars);\r\n    this.auto = this.webserviceService.myCars;\r\n    this.credentials = this.webserviceService.loginData;\r\n\r\n    this.marche = Array.from(new Set(this.auto.map((car: any) => car.marca)));\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.carForm.valid) {\r\n        console.log('Form Submitted!', this.carForm.value);\r\n        this.webserviceService.addCar('addCar', this.carForm.value);\r\n    }\r\n  }\r\n\r\n  buyCar(car: any) {\r\n    this.webserviceService.vendiAuto('sellCar', { id: car.id, cid: this.credentials.id, prezzo: car.prezzo, data: new Date().toISOString().slice(0, 19).replace('T', ' ') });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}